#ifndef _CUST_BAT_H_
#define _CUST_BAT_H_

#include <linux/hct_board_config.h>

#define CONFIG_HCT_NCP_HIGHER_CV

#ifdef __HCT_BAT_LOW_TEMP_PROTECT_ENABLE__
#define BAT_LOW_TEMP_PROTECT_ENABLE
#endif

/* stop charging while in talking mode */
#define STOP_CHARGING_IN_TAKLING
#define TALKING_RECHARGE_VOLTAGE 3800
#define TALKING_SYNC_TIME		   60

/* Battery Temperature Protection */
#define MTK_TEMPERATURE_RECHARGE_SUPPORT

#ifdef __HCT_MAX_CHARGE_TEMPERATURE__
 #define MAX_CHARGE_TEMPERATURE					__HCT_MAX_CHARGE_TEMPERATURE__
#else
#define MAX_CHARGE_TEMPERATURE  55
#endif

#ifdef __HCT_MIN_CHARGE_TEMPERATURE__
#define MIN_CHARGE_TEMPERATURE __HCT_MIN_CHARGE_TEMPERATURE__
#else
#define MIN_CHARGE_TEMPERATURE  -10
#endif

#define MAX_CHARGE_TEMPERATURE_MINUS_X_DEGREE	50

#ifdef __HCT_MIN_CHARGE_TEMPERATURE_PLUS_X_DEGREE__
#define MIN_CHARGE_TEMPERATURE_PLUS_X_DEGREE __HCT_MIN_CHARGE_TEMPERATURE_PLUS_X_DEGREE__
#else 
#define MIN_CHARGE_TEMPERATURE_PLUS_X_DEGREE (MIN_CHARGE_TEMPERATURE+2)
#endif
#define ERR_CHARGE_TEMPERATURE  0xFF

/* Linear Charging Threshold */
#define V_PRE2CC_THRES	3400	/*mV*/


#if defined( __HCT_CHARGING_FULL_CURRENT__)&&(__HCT_CHARGING_FULL_CURRENT__>0)
#define CHARGING_FULL_CURRENT	__HCT_CHARGING_FULL_CURRENT__	/*mA*/
#else
#define CHARGING_FULL_CURRENT	250	/*mA*/
#endif

/* Charging Current Setting */
#define USB_CHARGER_CURRENT_SUSPEND			0
#define USB_CHARGER_CURRENT_UNCONFIGURED	CHARGE_CURRENT_70_00_MA
#define USB_CHARGER_CURRENT_CONFIGURED		CHARGE_CURRENT_500_00_MA

#define USB_CHARGER_CURRENT					CHARGE_CURRENT_500_00_MA
/*#define AC_CHARGER_CURRENT					CHARGE_CURRENT_650_00_MA*/
#if defined(__HCT_AC_CHARGER_CURRENT__)
#define AC_CHARGER_CURRENT	__HCT_AC_CHARGER_CURRENT__
#else
#define AC_CHARGER_CURRENT	CHARGE_CURRENT_1000_00_MA
#endif
#define NON_STD_AC_CHARGER_CURRENT			CHARGE_CURRENT_500_00_MA
#define CHARGING_HOST_CHARGER_CURRENT       CHARGE_CURRENT_650_00_MA
#define APPLE_0_5A_CHARGER_CURRENT          CHARGE_CURRENT_500_00_MA
#define APPLE_1_0A_CHARGER_CURRENT          CHARGE_CURRENT_650_00_MA
#define APPLE_2_1A_CHARGER_CURRENT          CHARGE_CURRENT_800_00_MA


/* Precise Tunning */
#define BATTERY_AVERAGE_DATA_NUMBER	3
#define BATTERY_AVERAGE_SIZE 30

/* charger error check */
#define V_CHARGER_ENABLE 0				/* 1:ON , 0:OFF	*/
#define V_CHARGER_MAX 6500				/* 6.5 V	*/
#define V_CHARGER_MIN 4400				/* 4.4 V	*/

/* Tracking TIME */
#define ONEHUNDRED_PERCENT_TRACKING_TIME	10	/* 10 second*/
#define NPERCENT_TRACKING_TIME	60	/* 20 second*/
#define SYNC_TO_REAL_TRACKING_TIME	60	/* 60 second*/
#if defined(__HCT_V_0PERCENT_TRACKING__)
#define V_0PERCENT_TRACKING	__HCT_V_0PERCENT_TRACKING__	/*3450mV*/
#else
#define V_0PERCENT_TRACKING	3350	/*3450mV*/
#endif

/* Battery Notify */
#define BATTERY_NOTIFY_CASE_0001_VCHARGER
#define BATTERY_NOTIFY_CASE_0002_VBATTEMP
/*
//#define BATTERY_NOTIFY_CASE_0003_ICHARGING
//#define BATTERY_NOTIFY_CASE_0004_VBAT
//#define BATTERY_NOTIFY_CASE_0005_TOTAL_CHARGINGTIME
*/
/* High battery support */
#ifdef __HCT_BOARD_CONFIG_H__
#ifdef __HCT_BATTERY_VOLTAGE__
   #if __HCT_BATTERY_VOLTAGE__==4350
     #define HIGH_BATTERY_VOLTAGE_SUPPORT
   #elif __HCT_BATTERY_VOLTAGE__==4400
     #define HIGH_BATTERY_4400_VOLTAGE_SUPPORT
   #endif
#endif

#else
/*#define HIGH_BATTERY_VOLTAGE_SUPPORT*/
#endif


#if 0//def __HCT_V_CC2TOPOFF_THRES__
  #define V_CC2TOPOFF_THRES	__HCT_V_CC2TOPOFF_THRES__
#else
	#if defined(HIGH_BATTERY_4400_VOLTAGE_SUPPORT)
		#define V_CC2TOPOFF_THRES		3400
	#elif defined(HIGH_BATTERY_VOLTAGE_SUPPORT)
		#define V_CC2TOPOFF_THRES		3400
	#else
	  #define V_CC2TOPOFF_THRES	3400
	#endif
#endif

#if defined( __HCT_RECHARGING_VOLTAGE__)&&(__HCT_RECHARGING_VOLTAGE__>0)
#define RECHARGING_VOLTAGE	__HCT_RECHARGING_VOLTAGE__
#else
		#if defined(HIGH_BATTERY_4400_VOLTAGE_SUPPORT)
			#define RECHARGING_VOLTAGE      4330
		#elif defined(HIGH_BATTERY_VOLTAGE_SUPPORT)
			#define RECHARGING_VOLTAGE      4270
		#else
			#define RECHARGING_VOLTAGE	4150
		#endif

#endif

/* JEITA parameter */
/*#define MTK_JEITA_STANDARD_SUPPORT*/
#define CUST_SOC_JEITA_SYNC_TIME 30
#define JEITA_RECHARGE_VOLTAGE  4110	/* for linear charging */
#ifdef HIGH_BATTERY_VOLTAGE_SUPPORT
#define JEITA_TEMP_ABOVE_POS_60_CV_VOLTAGE		BATTERY_VOLT_04_240000_V
#define JEITA_TEMP_POS_45_TO_POS_60_CV_VOLTAGE		BATTERY_VOLT_04_240000_V
#define JEITA_TEMP_POS_10_TO_POS_45_CV_VOLTAGE		BATTERY_VOLT_04_340000_V
#define JEITA_TEMP_POS_0_TO_POS_10_CV_VOLTAGE		BATTERY_VOLT_04_240000_V
#define JEITA_TEMP_NEG_10_TO_POS_0_CV_VOLTAGE		BATTERY_VOLT_04_040000_V
#define JEITA_TEMP_BELOW_NEG_10_CV_VOLTAGE		BATTERY_VOLT_04_040000_V
#else
#define JEITA_TEMP_ABOVE_POS_60_CV_VOLTAGE		BATTERY_VOLT_04_100000_V
#define JEITA_TEMP_POS_45_TO_POS_60_CV_VOLTAGE	BATTERY_VOLT_04_100000_V
#define JEITA_TEMP_POS_10_TO_POS_45_CV_VOLTAGE	BATTERY_VOLT_04_200000_V
#define JEITA_TEMP_POS_0_TO_POS_10_CV_VOLTAGE	BATTERY_VOLT_04_100000_V
#define JEITA_TEMP_NEG_10_TO_POS_0_CV_VOLTAGE	BATTERY_VOLT_03_900000_V
#define JEITA_TEMP_BELOW_NEG_10_CV_VOLTAGE		BATTERY_VOLT_03_900000_V
#endif
/* For JEITA Linear Charging only */
#define JEITA_NEG_10_TO_POS_0_FULL_CURRENT  120
#define JEITA_TEMP_POS_45_TO_POS_60_RECHARGE_VOLTAGE  4000
#define JEITA_TEMP_POS_10_TO_POS_45_RECHARGE_VOLTAGE  4100
#define JEITA_TEMP_POS_0_TO_POS_10_RECHARGE_VOLTAGE   4000
#define JEITA_TEMP_NEG_10_TO_POS_0_RECHARGE_VOLTAGE   3800
#define JEITA_TEMP_POS_45_TO_POS_60_CC2TOPOFF_THRESHOLD	4050
#define JEITA_TEMP_POS_10_TO_POS_45_CC2TOPOFF_THRESHOLD	4050
#define JEITA_TEMP_POS_0_TO_POS_10_CC2TOPOFF_THRESHOLD	4050
#define JEITA_TEMP_NEG_10_TO_POS_0_CC2TOPOFF_THRESHOLD	3850


/* For CV_E1_INTERNAL */
#define CV_E1_INTERNAL

/* Disable Battery check for HQA */
#ifdef CONFIG_MTK_DISABLE_POWER_ON_OFF_VOLTAGE_LIMITATION
#define CONFIG_DIS_CHECK_BATTERY
#endif

#ifdef CONFIG_MTK_FAN5405_SUPPORT
#define FAN5405_BUSNUM 1
#endif

#define MTK_PLUG_OUT_DETECTION


#ifdef CONFIG_MTK_PUMP_EXPRESS_PLUS_SUPPORT
#define TA_START_BATTERY_SOC	1
#define TA_STOP_BATTERY_SOC 	95
#if defined(CONFIG_NCP1854_DUAL_SUPPORT)
#define TA_AC_9V_INPUT_CURRENT	CHARGE_CURRENT_3000_00_MA
#define TA_AC_7V_INPUT_CURRENT	CHARGE_CURRENT_3000_00_MA
#define TA_AC_CHARGING_CURRENT	CHARGE_CURRENT_3000_00_MA

#define TA_9V_SUPPORT

#undef V_CHARGER_MAX

#ifdef TA_12V_SUPPORT
#define V_CHARGER_MAX 12500				// 10.5 V
#else
#ifdef TA_9V_SUPPORT
#define V_CHARGER_MAX 10500				// 10.5 V
#else
#define V_CHARGER_MAX 7500				// 7.5 V
#endif
#endif


#else
#define TA_AC_9V_INPUT_CURRENT	CHARGE_CURRENT_2000_00_MA
#define TA_AC_7V_INPUT_CURRENT	CHARGE_CURRENT_2200_00_MA
#define TA_AC_CHARGING_CURRENT	CHARGE_CURRENT_2575_00_MA
#endif

extern void Dual_Switch_sub_enable(int level);

#if defined(CONFIG_NCP1854_DUAL_SUPPORT)
#if defined(__HCT_DUAL_NCP1854_SUPPORT__)&&(__HCT_DUAL_NCP1854_SUPPORT__ ==HCT_YES)
#else
    #error "CONFIG_NCP1854_DUAL_SUPPORT defined but __HCT_DUAL_NCP1854_SUPPORT__ defined error"
#endif
#endif	

#endif

#ifndef __HCT_BATTERY_PROTECT_SUPPORT__
#define __HCT_BATTERY_PROTECT_SUPPORT__  HCT_YES
#endif

////////-------next is charger temprature proctct issue ----------------////



#ifdef __HCT_AC_TEM_PROTECT_CHARGER_CURRENT__
#define AC_TEM_PROTECT_CHARGER_CURRENT __HCT_AC_TEM_PROTECT_CHARGER_CURRENT__
#else
#define AC_TEM_PROTECT_CHARGER_CURRENT CHARGE_CURRENT_800_00_MA
#endif

#ifdef __HCT_AC_LOW_TEM_PROTECT_CHARGER_CURRENT__
#define AC_LOW_TEM_PROTECT_CHARGER_CURRENT __HCT_AC_LOW_TEM_PROTECT_CHARGER_CURRENT__
#else
#define AC_LOW_TEM_PROTECT_CHARGER_CURRENT CHARGE_CURRENT_800_00_MA
#endif



#if  __HCT_BATTERY_PROTECT_SUPPORT__
#define BAT_LOW_TEMP_PROTECT_ENABLE
#if defined(MAX_CHARGE_TEMPERATURE)&&(MAX_CHARGE_TEMPERATURE>50)
#else
   #error "MAX_CHARGE_TEMPERATURE must > 50, in this case"
#endif

#if defined(MIN_CHARGE_TEMPERATURE)&&(MIN_CHARGE_TEMPERATURE<1)  // we allow MIN_CHARGE_TEMPERATURE set 0
#else
   #error "MIN_CHARGE_TEMPERATURE must less then 0, in this case"
#endif
#endif



#endif /* _CUST_BAT_H_ */
